- name: Update apt packages | {{ansible_distribution}} {{ansible_distribution_major_version}} | 0.0 Update apt packages if it is older than cache_valid_time
  apt:
    #upgrade: yes
    update_cache: yes
    cache_valid_time: 3600 #One hour
  register: update_state

- name: Update middleware | {{ansible_distribution}} {{ansible_distribution_major_version}} | 0.1 Print update status
  debug:
    var: update_state

- name: Update middleware | {{ansible_distribution}} {{ansible_distribution_major_version}} | 1.0 Check middleware update list
  command:  apt list --upgradable
  register: list_upgradable_state

- name: Update middleware | {{ansible_distribution}} {{ansible_distribution_major_version}} | 1.1 Print middleware update list
  debug:
    var: list_upgradable_state.stdout_lines
  #register: upgr_lines

- name: Update middleware | {{ansible_distribution}} {{ansible_distribution_major_version}} | 1.1 Add packages list
  set_fact:
    packages_upgradables_list: "{{list_upgradable_state.stdout_lines}}"
  register: upgr_lines

- name: Update middleware | {{ansible_distribution}} {{ansible_distribution_major_version}} | 1.2 Add k/v 1
  set_fact:
    imported_var: "{{ upgr_lines.ansible_facts | default({}) | combine({'instance_id': '11111'}) }}"

- name: Update middleware | {{ansible_distribution}} {{ansible_distribution_major_version}} | 1.2.1 Add k/v 2
  set_fact:
    imported_var_2: "{{ imported_var | combine({'instance_ad': '3333'}) }}"

- name: Update middleware | {{ansible_distribution}} {{ansible_distribution_major_version}} |  1.2.1 Add k/v 3
  set_fact:
    imported_var_3: "{{ imported_var_2 | combine({'execution_date_time': ansible_date_time.date+' '+ansible_date_time.time }) }}"

- name: Update middleware | {{ansible_distribution}} {{ansible_distribution_major_version}} |  1.2.1 Add k/v 4
  set_fact:
    imported_var_4: "{{ imported_var_3 | combine({'distribution': ansible_distribution }) }}"

- name: Update middleware | {{ansible_distribution}} {{ansible_distribution_major_version}} |  1.2.1 Add k/v 5
  set_fact:
    imported_var_5: "{{ imported_var_4 | combine({'distribution_version': ansible_distribution_version }) }}"

- name: Update middleware | {{ansible_distribution}} {{ansible_distribution_major_version}} |  1.2.1 Add k/v 6
  set_fact:
    imported_var_6: "{{ imported_var_5 | combine({'fqdn': ansible_fqdn}) }}"

- name: Update middleware | {{ansible_distribution}} {{ansible_distribution_major_version}} |  1.2.1 Add k/v 7
  set_fact:
    imported_var_last: "{{ imported_var_6 | combine({'instance_id': instance_id }) }}"

# - name: TYPE OF imported_var
#   debug:
#     msg: "{{ imported_var | type_debug }}"
#
# - name: TYPE OF imported_var_new
#   debug:
#     msg: "{{ imported_var_new| type_debug }}"

- name: Update middleware | {{ansible_distribution}} {{ansible_distribution_major_version}} | 1.3 Add item head
  copy:
    content: "{{ imported_var_last  | to_nice_json}}"
    dest: '{{ json_output_file }}'
    remote_src: yes

- name: Debug imported_var_last to_nice_json
  debug:
    msg: "{{ imported_var_last }}"
# - name: Convert lines to dict | {{ansible_distribution}} {{ansible_distribution_major_version}} | 1.4 Convert lines to dict
#   lineinfile:
#     dest: '{{ json_output_file}}'
#     state: absent
#     regexp: 'Listing...'
#   loop: "{{ imported_var_new.{{ packages_upgradables_list }} }}"

# - name: Import Module Slurp | {{ansible_distribution}} {{ansible_distribution_major_version}} | IMP. Slurp
#   include_tasks:
#     file: slurp.yml
#
# - name: Debug 1
#   debug:
#     msg: "{{ remote_content }}"

# - name: Create and Add items to dictionary
#   set_fact:
#     userdata: "{{ imported_var_new.packages_upgradables_list | default({}) | combine ({ 'paquete' : item.split('/')[0] }) }}"


- name: tipo de mi variable "imported_var_new"
  debug:
    msg: "{{ imported_var_last | type_debug }}"

- name: definir
  set_fact:
    newlist: {}

- name: tipo de variable de "newlist" fijado a dict
  debug:
    msg: "{{ newlist | type_debug }}"

- name: tsting
  set_fact:
    newlist: "{{ imported_var_last | regex_replace('from:', '#' )}}"

- name: tsting2
  set_fact:
    newlist: "{{ newlist | regex_replace('amd64', '#' )}}"

- name: tsting3
  set_fact:
    newlist: "{{ newlist | regex_replace('/', '#' )}}"

- name: tsting4
  set_fact:
    newlist: "{{ newlist | regex_replace('all', '#' )}}"

- name: tipo de mi variable newlist
  debug:
    msg: "{{newlist}}"

- name: tipo de mi variable newlist
  debug:
    msg: "{{newlist | type_debug}}"

- name: poner orden dict
  set_fact:
    vamosaver: "{{ newlist | dict2items }}"

- name: poner orden dict
  set_fact:
    newlist: "{{ vamosaver | items2dict }}"

- name: tipo de mi variable newlist FINAL
  debug:
    msg: "{{newlist | type_debug}}"

- name: Update middleware | {{ansible_distribution}} {{ansible_distribution_major_version}} | 1.3 Add item head
  copy:
    content: "{{ newlist | to_nice_json }}"
    dest: '{{ json_output_file }}'
    remote_src: yes

- name: tipo de mi variable newlist FINAL2
  debug:
    msg: "{{newlist | type_debug}}"

- name: poner orden dict
  set_fact:
    newlist: "{{ newlist | dictsort }}"

- name: poner orden dict
  debug:
    msg: "{{ newlist | type_debug }}"

- name: Convert lines to dict | {{ansible_distribution}} {{ansible_distribution_major_version}} | 1.5 Convert lines to dict
  lineinfile:
    path: '{{ json_output_file}}'
    state: present
    regexp: '#'
    line: "\t{{ dict(keys_list | zip( item.split('#'))) | sort}}, "
  loop: "{{ newlist.packages_upgradables_list}}"


# - name: Import Module Slurp | {{ansible_distribution}} {{ansible_distribution_major_version}} | IMP. Slurp
#   include_tasks:
#     file: slurp.yml





















# - name: Convert lines to dict | {{ansible_distribution}} {{ansible_distribution_major_version}} | 1.5 Convert lines to dict
#   lineinfile:
#     path: '{{ json_output_file}}'
#     state: absent
#     regexp: 'Listing...'
#     #line: '{"package": "{{ item.split("#")[0] }}", "actual_version": "{{ item.split("#")[1] }}", "upgradable_version": "3" }'
#   loop: "{{ newlist.packages_upgradables_list }}"


# - name: Print all available facts
#   debug:
#     var: ansible_facts
