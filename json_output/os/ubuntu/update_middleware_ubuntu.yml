- name: Update apt packages | {{ansible_distribution}} {{ansible_distribution_major_version}} | 0.0 Update apt packages if it is older than cache_valid_time
  apt:
    #upgrade: yes
    update_cache: yes
    cache_valid_time: 3600 #One hour
  register: update_state

- name: Update middleware | {{ansible_distribution}} {{ansible_distribution_major_version}} | 0.1 Print update status
  debug:
    var: update_state

- name: Update middleware | {{ansible_distribution}} {{ansible_distribution_major_version}} | 1.0 Check middleware update list
  command:  apt list --upgradable
  register: list_upgradable_state

- name: Update middleware | {{ansible_distribution}} {{ansible_distribution_major_version}} | 1.1 Print middleware update list
  debug:
    var: list_upgradable_state.stdout_lines
  register: upgr_lines


- name: Update middleware | {{ansible_distribution}} {{ansible_distribution_major_version}} | 1.1 Update middleware list
  debug:
    msg: "{{ list_upgradable_state.stdout | type_debug }}"

- name: Update middleware | {{ansible_distribution}} {{ansible_distribution_major_version}} | 1.3 print
  debug:
    msg: "{{ list_upgradable_state.stdout}}"

##################################


# - name: Update middleware | {{ansible_distribution}} {{ansible_distribution_major_version}} | 1.4 Add item head
#   set_fact:
#     imported_var: "{{ list_upgradable_state.stdout_lines | regex_replace('Listing...', '')  }}"
#     # imported_var: "{{ list_upgradable_state.stdout_lines | default([]) | combine({ 'hello': 'world' }) }}"
#   register: list_json

# - name: Update middleware | {{ansible_distribution}} {{ansible_distribution_major_version}} | 1.5 print
#   debug:
#     var: list_json

 - name: Update middleware | {{ansible_distribution}} {{ansible_distribution_major_version}} | 1.6 Add item head
   copy:
     content: "{{ upgr_lines }}"
     dest: /tmp/final.json
     remote_src: yes

- name: Delete first line
  lineinfile:
    path: /tmp/final.json
    state: absent
    regexp: 'Listing...'



# - name: Update middleware | {{ansible_distribution}} {{ansible_distribution_major_version}} | 1.6 Add item head
#   copy:
#     content: "{{ imported_var | to_nice_json }}"
#     dest: /tmp/final.json
#     remote_src: yes

#################################

- name: Add line by line json output
  lineinfile:
    path: /tmp/somelog.json
    line: "{{ item.split('/') | to_nice_json  }}"
    #line: "{{ dict([name , package] | zip({{ item.split('/')}})) }}"
  loop: "{{ list_upgradable_state.stdout_lines}}"

- name: Create a JSON information
  set_fact:
     packages_to_update: "{{ list_upgradable_state | json_query(\"stdout_lines[]\") }}"

- name: Create a JSON information
  set_fact:
     packages_to_update: "{{ list_upgradable_state | json_query(\"stdout_lines[]\") }}"

- name: Zip names and packages
  set_fact:
     pack: "{{ dict('packagues' | zip(packages_to_update)) }}"


- name: Update middleware | {{ansible_distribution}} {{ansible_distribution_major_version}} | 1.4  json
  set_fact:
    jsondata1: "{{ item.split('/')}}" #"{{list_upgradable_state.stdout_lines | items2dict }}"
  with_items:
    - "{{list_upgradable_state.stdout_lines}}"

- name: Update middleware | {{ansible_distribution}} {{ansible_distribution_major_version}} | 1.5 print
  debug:
    msg: "{{jsondata1}}"

# - name: Update middleware | {{ansible_distribution}} {{ansible_distribution_major_version}} | 1.6  json
#   set_fact:
#     jsondata: "{{ jsondata1.split('/') }}"

- name: Update middleware | {{ansible_distribution}} {{ansible_distribution_major_version}} | 1.6.ยบ print
  debug:
    msg: "{{ jsondata1 | type_debug }}"

- name: Update middleware | {{ansible_distribution}} {{ansible_distribution_major_version}} | 1.6.ยบ print
  debug:
    msg: "{{jsondata1}}"
